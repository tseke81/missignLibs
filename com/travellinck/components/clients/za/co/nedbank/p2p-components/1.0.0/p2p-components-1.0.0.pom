<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>com.travellinck.components.clients</groupId>
        <artifactId>nedbank</artifactId>
        <version>1.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.travellinck.components.clients.za.co.nedbank</groupId>
    <artifactId>p2p-components</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Nedbank P2P / Trip Requisition Components</name>
    <description>
        A set of components that can be use to parse Nedbank P2P e-mails,
        submit these as trips to the Travellinck corporate app, etc.
    </description>

    <dependencies>
        <!-- Space-based API that we implement -->
        <dependency>
            <groupId>com.travellinck.components.clients.za.co.nedbank</groupId>
            <artifactId>p2p-api</artifactId>
        </dependency>

        <!--  Utilities to schedule the publishing of Entries in JavaSpace at some future time   -->
        <dependency>
            <groupId>com.travellinck.infrastructure</groupId>
            <artifactId>scheduling-api</artifactId>
        </dependency>

        <!-- Tools -->
        <dependency>
            <groupId>com.travellinck.integration.utilities</groupId>
            <artifactId>com.travellinck.transIT.java-tools</artifactId>
        </dependency>
        <dependency>
            <groupId>com.travellinck.integration.utilities</groupId>
            <artifactId>com.travellinck.integration.utilities.xml-utilities</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ccil.cowan.tagsoup</groupId>
            <artifactId>tagsoup</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <!-- For parser generator for P2P e-mail parsing -->
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
            <version>4.2.2</version>
        </dependency>
        <dependency>
            <groupId>com.travellinck.utilities</groupId>
            <artifactId>general-utilities</artifactId>
        </dependency>

        <dependency>
            <!-- Used to construct messages easily -->
            <groupId>com.travellinck.communication</groupId>
            <artifactId>email-components</artifactId>
        </dependency>
        <!-- Parse mails -->
        <dependency>
            <groupId>org.apache.james</groupId>
            <artifactId>apache-mime4j-core</artifactId>
        </dependency>

        <!-- JAX-RS 2.x Client RI -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <!-- JSON support -->
        <dependency>
            <groupId>com.owlike</groupId>
            <artifactId>genson</artifactId>
        </dependency>

        <!-- CDI dependency injection -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
        </dependency>

        <dependency>
            <groupId>net.htmlparser.jericho</groupId>
            <artifactId>jericho-html</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- Unit and integration testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.travellinck.integration.utilities</groupId>
            <artifactId>travellinck-testing-utilities</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.rioproject</groupId>
            <artifactId>rio-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- SLF4J Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.2.2</version>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Generate both listener and visitor -->
                    <listener>true</listener>
                    <visitor>true</visitor>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Do integration testing on-demand only -->
        <profile>
            <id>integration-test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Integration test(s) -->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <forkMode>once</forkMode>
                            <argLine>-DRIO_TEST_ATTACH</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
